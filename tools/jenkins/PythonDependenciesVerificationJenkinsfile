def customImage

pipeline {
    agent any
    parameters {
        string(name: 'BRANCH', defaultValue: 'develop', description: "Execution branch")
    }
    environment {
        REPO_URL = "git@github.com:mcieciora/PuzzlingOrangutan.git"
    }
    options {
        skipDefaultCheckout()
    }
    triggers {
        parameterizedCron('''
                H 6 * * * %BRANCH=master
                H 6 * * * %BRANCH=develop
        ''')
    }
    stages {
        stage ("Checkout branch") {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: "github_id", keyFileVariable: 'key')]) {
                        sh 'GIT_SSH_COMMAND="ssh -i $key"'
                        git branch: params.BRANCH, url: env.REPO_URL
                    }
                    currentBuild.description = "Branch: ${env.BRANCH}"
                }
            }
        }
        stage ("Prepare docker test image") {
            steps {
                script {
                    customImage = docker.build("test_image:${env.BUILD_ID}", "-f automated_tests/Dockerfile .")
                }
            }
        }
        stage("Verify dependencies") {
            steps {
                script {
                    customImage.inside("-v $WORKSPACE:/app") {
                        return_value = sh(script: "python3 tools/python/python_dependencies_up_to_date_verification.py", returnStdout: true).trim()
                        if (return_value.contains("Consider upgrading")) {
                            unstable(return_value)
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            sh "docker rmi test_image:${env.BUILD_ID}"
            dir("$WORKSPACE") {
                deleteDir()
            }
        }
    }
}